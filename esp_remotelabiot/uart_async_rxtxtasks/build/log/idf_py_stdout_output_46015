[1/10] Performing build step for 'bootloader'
[1/1] cd /home/rome/esp/esp_workspace/esp_workspace/uart_async_rxtxtasks/build/bootloader/esp-idf/esptool_py && /home/rome/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/rome/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/rome/esp/esp_workspace/esp_workspace/uart_async_rxtxtasks/build/bootloader/bootloader.bin
Bootloader binary size 0x5030 bytes. 0x2fd0 bytes (37%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/uart_async_rxtxtasks_main.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable uart_async_rxtxtasks.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated /home/rome/esp/esp_workspace/esp_workspace/uart_async_rxtxtasks/build/uart_async_rxtxtasks.bin
[7/8] cd /home/rome/esp/esp_workspace/esp_workspace/uart_async_rxtxtasks/build/esp-idf/esptool_py && /home/rome/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/rome/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/rome/esp/esp_workspace/esp_workspace/uart_async_rxtxtasks/build/partition_table/partition-table.bin /home/rome/esp/esp_workspace/esp_workspace/uart_async_rxtxtasks/build/uart_async_rxtxtasks.bin
uart_async_rxtxtasks.bin binary size 0x30da0 bytes. Smallest app partition is 0x100000 bytes. 0xcf260 bytes (81%) free.
[7/8] cd /home/rome/esp/esp-idf/components/esptool_py && /home/rome/.espressif/tools/cmake/3.24.0/bin/cmake -D IDF_PATH=/home/rome/esp/esp-idf -D "SERIAL_TOOL=/home/rome/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/home/rome/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32c3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/rome/esp/esp_workspace/esp_workspace/uart_async_rxtxtasks/build -P /home/rome/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32c3 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 uart_async_rxtxtasks.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev1
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-C3 (QFN32) (revision v0.3)
Features: WiFi, BLE
Crystal is 40MHz
MAC: 58:cf:79:07:53:84
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 20528 bytes to 12602...
Writing at 0x00000000... (100 %)
Wrote 20528 bytes (12602 compressed) at 0x00000000 in 0.8 seconds (effective 203.0 kbit/s)...
Hash of data verified.
Compressed 200096 bytes to 102720...
Writing at 0x00010000... (14 %)
Writing at 0x0001b094... (28 %)
Writing at 0x000218c9... (42 %)
Writing at 0x00028d6b... (57 %)
Writing at 0x0002fd0a... (71 %)
Writing at 0x00036f65... (85 %)
Writing at 0x0003ebef... (100 %)
Wrote 200096 bytes (102720 compressed) at 0x00010000 in 3.3 seconds (effective 480.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 277.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
